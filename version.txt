版本更新信息：

0.3.32  视图新增将内存变量复制到系统剪贴板的功能，以便将视图数据快速导出到文本。
        bower install zeroclipboard ng-clip
        范例代码都是通过了，但是融于易盘有问题，可能是Angularjs版本问题（1.4.8 vs. 1.6.1）
        决定用简单的显示文本的办法，直接打印到Console，让用户自己去复制粘贴

0.3.31  修正了导出试卷成绩的功能

0.3.30  修正了IP限制为必选项和考试信息统计中出现的筛选不正确的错误。

0.3.29  发现系统漏洞，登陆用户可以同时多人参加考试，并重复提交试卷
        修改事宜：
        1.  考试设置新增IP限制字段，接受一个正则表达式，暂时仅支持 10.64.34.* 这种机房限制模式
            为此在ExamConfig中新增 ipPattern/ipPatternB两个字段，前者保存用户的输入，后者是实际
            使用时需要用到的匹配模板。
        2.  考试新增isRead和readIP, dateRead字段，前者控制是否已经读取试卷，后者记录读取的IP地址和时间
        3.  读取时判断IP来源，以及是否已经读取，禁止重复读取；
        4.  提交时禁止重复提交，即使是非法提交地址，也可以提交，但是会影响后来的提交，暂时不修改
        5.  试卷可以进行异常检测，检查读取试卷和提交试卷是否合法。

0.3.28  试卷的查看模式下，试题是否回答正确可以通过题号的背景颜色来区分。

0.3.27  有学生设法在根目录上传了文件，原因是可以通过Chrome的开发者视图修改HTML脚本，如果
        删除了ng-disable的标注，被禁止的元素就变成可以使用了。解决的办法是开启多方权限认证，
        比如在服务器端和脚本端，这里修改fileCtrl中对敏感操作的执行方法，先进行当前状态判断。

0.3.26  有学生反映提交时有时候不能包含全部答案，可能是搜集答案的过程中AngularJS正在刷新视图？
        准备提交时从缓存中获取答案，而不是从内存中，这样可以避免程序对答案变量的修改。

0.3.25  抽查明细中显示批注历史，抽查明细可以直接跳转到修改用户页面

0.3.24  修正了几处bug，实际抽查人数没有更新，提交抽查时不附带时间，不能直接将抽查候选集合赋值给
        视图的变量，如果视图发生增删改都可能会影响候选集合，发起新签到的名称生成规则修改。
        允许用户在查看抽查结果时跳转到用户明细界面。

0.3.23  新增抽查的日期还有点问题，目前插入抽查后的时间统一显示一致的时间，不知何故

0.3.22  暂时去掉了json2.js，取消对360安全浏览器的支持，反正目前使用的用户都是学生。
        新增用户表的markers字段，用来保存对某个学生的信息标记，包含日期/备注人/备注信息
        三项内容，允许在修改用户时进行增删改查，查看用户时也能显示备注的拼接信息。
        1. 修改了User的数据模型，新增marks字段；
        2. 修改了User的显示视图，将已有字段按每行两列排列，为批注预留地方
            在最下面显示批注的表格视图。
        3. 合并修改用户、新建用户和修改个人信息三个页面的控制器到一个。
        4. 在用户列表视图中新增批注列，显示marks的内容集合。

0.3.21  新增server/utils/updateUserPwd脚本，以便在忘记密码时能快速从数据库来进行重置。
        新增了json2.js和ng-app的同名id属性，以向下兼容，目前对360安全浏览器支持效果不错，
        不过IE7,8,9,10还都不支持。

0.3.20  新学期新增上交作业时间统计，便于查看学生上传的快慢顺序。
        拟在作业统计上新增列表视图的方式添加此项功能。
        为了能在文件上进行异常检测，需要在文件的模型新增ip字段，每次upload时记录文件的ip来源。
        作业统计时能切换到表格视图，分别显示已经提交的学生姓名/学号/文件列表/IP/时间，可以进行
        异常检测/文件下载，默认按上传文件时间升序排列。
        作业统计查询结果中新增每个学生的最新文件索引，每个文件上传的IP以及时间。

0.3.19  修改易盘的项目说明，从单纯的网络文件夹变成了网络教学服务平台。
        修改段落的首行缩进2个字符。

0.3.18  使用forever来执行服务器脚本，防止因为偶然的bug导致的服务器死机。

0.3.17  修正了在火狐浏览器中考试试卷查看时可以复制的问题。

0.3.16  修正了表格不能指定每页显示行数的错误；
        允许查看试卷时按当前筛选条件批量导出成绩文本；
        禁止查看试卷时拷贝题目和答案文本。

0.3.15  考试设置中如果学号匹配模式过长，显示一个缩减的模式字符串。
        从Excel拷贝过来的用户数据在批量导入时发现可能还有换行符号在里面，这导致了导入学生数据时不正确，例如用户的密码就
        不是导入的密码（因为换行符号看不见），解决的办法是统一在读取导入数据时进行替换，例如用
            str.replace(/(\n|\r|(\r\n)|(\u0085)|(\u2028)|(\u2029))/g, '');
        导入数据还有一个问题就是没有去掉前后的空格，这里再调用一次trim函数。

0.3.14  删除了调试时使用的样板登陆数据的代码

0.3.13  修正了新增试题设定默认类型和类属的问题。

0.3.12  有同学发现提交显示成功，但过后却显示没有答案，应该是答案保存上出了问题，这里修改提交后删除
        缓存的策略，改为不删除，而是通过试卷的是否提交标志来判别。管理员还可以手工修改已提交的标志
        从而允许用户重新提交答案。
        允许管理员查看已经生成但没有发布的试卷。

0.3.11  通过jsonfile插件读取保存在json格式的试题，主要是为了导入软件测试的试题库

0.3.10  0.3.3中修改qid的形式为question id + 样式索引带来了一个问题，用户提交时不能判卷，因为需要
        关联试题的分数和类型，其实关联需要的分数和试题类型早就保存在试卷中了，这里主要是修正
        Exam模型的getScore方法，让其不需要关联数据，而是从自身里面来读取这些数据。

0.3.9   新增试题自动选取在试题列表中选择的类属筛选中的第一个，如果没有筛选条件，则默认第一个类属。

0.3.8   为表格的排序字段增加升序和降序的图标，这里采用fa-sort-amount-asc/desc

0.3.7   增加试题合并和插入源代码的功能

0.3.6   为了让列表页面在刷新和回退回来后尽量显示上次离开时的页面，增加缓存用户选择的页码，每页的行数
        以及用户可能的自定义筛选项，是否显示模糊筛选框
        /////////////////////////////////////////////////////////////////////////////////
        TODO Paginator的重新考量：
            Paginator目前实现了翻页、定制查询等功能，但是还不完美，下一个版本的Paginator至少应包含一下
        功能点：
            1.  分页，按页获取数据，指定页面行数，显示总记录数和总页数，跳到指定页；
            2.  模糊查询和按列定制查询参数；
            3.  按列排序，并显示当前排序字段以及排序方向；
            4.  自动保存当前页码和排序参数、定制查询参数到缓存，以便用户重新回到该页面时能恢复上次的页面；
            5.  单击记录在该记录下方展开该记录的其他操作，例如单个删除、显示额外信息、修改等，避免将所有
                可能的操作罗列在最后一列的做法，整个表格最多有一行的展开的；
            6.  能自动显示加载图标，表明正在后台加载数据，对其的操作自动设为不能执行；
            7.  提供刷新、显示列筛选、导出到其他格式的功能。

            结合上述的要求，当前的Paginator还有很大的差距，必须将目前的Paginator用Angular的Directive技术来
            写组件，并用ng-include等方法来最大程度的做到代码重用。有一个可能更好的办法是借用其他的组件，
            比如下面的两个：
            a.      https://github.com/wenzhixin/bootstrap-table
                    实现了大部分上述功能，仅仅展开可能要研究一下，如果能看懂源代码将是一个比较合适的选择；
            b.      https://github.com/Adaptv/adapt-strap
                    实现了包括表格、警告信息框等多个组件，也值得试一试。
            c.      angular table:
                        https://github.com/lorenzofox3/Smart-Table
                        https://github.com/pillopk/tablefactory/blob/master/docs/getting-started.md
                        https://github.com/Swimlane/angular-data-table

            还有checkbox的Switch风格，也可以考虑加到项目中来，可以参考https://github.com/nostalgiaz/bootstrap-switch。

            TODO 目前易盘的开发暂时告一段落，下一步将移步到绿行者项目的开发，上述想法留待下一个项目来考虑。
        /////////////////////////////////////////////////////////////////////////////////

0.3.5   关于排序的处理，原想默认按最后修改时间排序，再根据用户选择排序。最后还是决定采用缓存的方式记录
        用户最后的排序列和方向。

0.3.4	为试题，试卷和考试分别新增编号和最后修改时间两个字段，主要是为了区别对象，虽然目前可以通过_id
	    来区别，但是对用户不友好，特别是报错时很难区分，在列表时也没有排序的标准，容易产生排序无规律的
	    错觉，原有的_id都保留使用，例如考试试卷中缓存和提交答案标识符还是原来的，不过在显示上增加编号，
	    列表是新增编号和最后修改时间两项内容，并允许用户排序和筛选。

0.3.3   为了检查试卷，允许考试中设置测卷选项，一旦设置了测卷，生成试卷时就会试题的每个式样都会形成一个
        试题，而不是随机选择一个，配合组卷方案选择所有的题目可以出一套包含某些章节的所有试题，供教师
        在出卷后检查试卷使用。
        将生成试卷的qid从question对象的真实id改成真实id+式样id的组合形式，从而即实现了问题和答案的对照，
        也能回溯到question对象和式样的引用，最根本的是能实现生成测试试卷。
        增加试题修改题干时的HTML代码视图，可以通过源代码和最终效果两种形式的修改。

0.3.2   完成批量转换SmartExam系统导出的试题格式，可以借助importSmartExam.js完成批量转换。

0.3.1   增加试卷编号，通过questionID+formIndex实现试题的定位，支持试题库中凭编号来唯一定位试题，便于
        实用阶段用户报错的分析处理，试卷上也可见试题编号
        生成试卷时选择试卷模板后随机打乱试题的排列顺序。

0.3.0   考试系统第一步设计的功能全部实现，下一步通过组织软件测试和C语言测验检验考试系统的功能。

0.2.5   上传时隐藏试卷的可选部分，防止学生误操作；生成试卷时显示进度条；
        允许考试配置中手动增加试卷，特别为插班生考试准备
        增加考试的统计功能，主要用于显示一门考试的应该人数，交卷情况，判卷情况等
        题干文字部分使用HTML标记，允许管理员直接排版，支持对齐，加粗，斜体，字体等式样；
        题干可以附加图片，图片可以直接拖拽上传（上传位置是各自的工作目录），也可以从工作目录里面
        选择，工作目录用树形结构显示。
        由于试卷可能带图片，因此在下方增加一个试题的导航条，方便答题后迅速进入下一题

0.2.4   允许用户从考试设置中直接查看对应生成的考试试卷。

0.2.3   增加考试试卷的查询功能，要能按考试状态、考试名称、学生交卷状态等方式进行筛选。
        修改数据库Exam的结构，新增isCorrected，dateCorrect，dateBeginAhead三个字段

0.2.2   完成了考试的倒计时、交卷和判卷环节。

0.2.1   修正了Yipan对改名的处理，允许各自在自己的目录里面改名操作
        主页添加到易享的链接

0.2.0   增加考试环节：第一步先实现试题库、组卷、组考、生成考卷、学生参考、提交答案、判卷几个步骤，注意组考中需要随机生成
        试卷模版，即试卷包含的题目ID号，而生成考卷则需要为每一个学生挑选模版，并随机排列试题和答案，记录参考答案。学生则
        直接查询考卷中包含自己的考卷，如果其状态是开放，则可以参考，完成后提交试题编号和答案，自动判卷则是和参考答案的简
        单匹配。

0.1.5   目前文件记录信息里面没有lastModified字段，显示的最近时间是操作历史中的最近操作时间，通过这个
        时间来判断学生上传文件的最后时间是不公平的，比如最近下载以后的时间就不准。修改的方式是增加一
        个lastModified字段，记录上传/替换等时间，忽略下载、改名等时间，同时显示文件时的最近时间也可以
        直接显示lastModified了。
        作业统计中增加未交学生统计功能。
        签到中出现了统计数据不准的情形，可能是因为异步操作中原子操作被破坏引起的，解决的办法是修改单个记录时不去维护统计
        数据，而是新增统计功能，单独来实时统计。
        签到中出现了学生重复登入为其他同学代签的问题，拟通过记录浏览器的IP地址来防止，基本的想法是同一个IP不能签到超过一
        次，在签到时记录请求的IP地址。如果发现签到人数与实际人数有出入，可以执行异常检测，即比较所有签到用户的IP数据，如
        果同一IP有超过1个以上的签到，则都视作代签来处理。

0.1.4   增加一个统计学生上传文件的功能，查询条件是时间段和匹配对象，返回的数据包含：学生人数，
        文件数，明细有：学生id，文件ID数组，单击可以查看文件详细情况。

0.1.3   易禹负责新增签到、统计上传文件的功能。
        签到功能：学生能通过登录易盘系统来完成教师发起的签到。
        修改系统Bug：
                a.由于只有删除的文件才有isDelete属性，且属性值为删除的日期，而一般的文件可能没有isDelete的值，
                  显示文件时的筛选条件isDelete:0会导致一般的文件不能显示
                  修正：将isDelete的筛选条件改为 isDelete:null

0.1.2   增加文件管理器列表搜索，使用ng-repeat中的filter属性进行筛选实现搜索
        修复bug：
            学生不能更改个人工作目录；
            进入根目录显示个人工作目录和所有文件。
        待解决：随着搜索加入，文件管理器出现性能问题(控制器及arrayator中大量的循环遍历)

0.1.1   解决图片预览尺寸适配问题，使用bootstrap构建响应式图片
        使用视频最开始画面作为视频预览poster
        文件类型扩展，加入html，css，cpp等源代码查看，并重新分配awesome图标
        增加图片手动缩放功能(滑动条)，使用html5的canvas显示图片并实现实时缩放
        不再更新bulid.properties，只更新index.html中的版本号

0.1.0   增加pdf文件预览功能；
        更改文件管理器列表排序方式，使用ng-repeat中的orderBy属性
        计划增加回收站功能(有待解决)：
			1.数据库file模型：
				为文件对象增加一个isDelete字段，类型为Data，默认为0(Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间))
			2.服务端处理删除请求：
				和文件管理器一样，通过patch方法传递参数进行文件删除
				(1)删除文件管理器里的文件，将isDelete字段更新为当前系统时间(Data.now())，对于删除文件夹，
				   由于不需要在回收站显示文件夹下的子文件及目录，所以将文件夹isDelete更新为当前系统时间，
				   子文件更新为初始0时间+10秒；
				(2)删除回收站文件即为永久删除，先将实际文件删除，再删除数据库记录，对于回收站中的文件夹，遍历子文件(夹)
				   一一删除文件，再删除数据库记录；
			3.服务端处理拿数据请求：
				通过在参数中辨识请求来自文件管理器还是回收站
				文件管理器：返回isDelete字段为0的记录；
				回收站：返回isDelete字段既不为0也不为0+10秒的记录；
			4.客户端逻辑处理和页面显示：
				将导航栏的“网盘”改为下拉列表，子菜单为“文件管理器”和“回收站”，单击分别跳转至“/files”和“/files/recycle”;
				逻辑在recycle控制器中处理，在angularjs路由中添加控制器和html页面设置

0.0.9   增加视频、音频等文件类型的支持
        新增图片预览，文本预览，音频播放功能
        修正关闭bootstrap的modal框后依旧在播放音频文件的问题
        通过videogular模块实现视频播放，本质是html5内置播放器(直接调用html5播放器播放大视频会造成内存崩溃)

0.0.8   修正新建文件夹后不显示容量的问题,
        修正删除包含子文件(夹)的文件夹无法删除子文件(夹)的问题，正则查询匹配条件：{$regex:'^('+正则查询内容+')'}，
        改进文件操作类型，规范文件操作历史。

0.0.7   修正文件、文件夹操作历史记录时间不正确问题，
        修正日志管理列表无法显示用户的问题，
        去除管理员个人资料修改界面磁盘容量一栏，
        去除开始页面右上角多余的登陆按钮。

0.0.6   非管理员用户在查看根目录时，只显示自己的工作目录和根目录的文件，不显示其他人的工作目录。

0.0.5   增加了访问不存在ID的错误处理页面，如果用户访问了不存在的页面（可能是日志信息已经过时，
        或者修改了地址栏），服务器返回错误信息，信息中没有success=true的标记，页面不显示详细
        信息，而只显示错误信息。

0.0.4   新增批量导入用户的页面，用户需要的信息有code,name,pwd,remark以及role，其中前四项可以
        在导入文件中给定，而role则在页面上统一指定。
        通过async.whilst实现批量导入.
        实现用户的磁盘容量修改和查看。
        更改了主页的文字和快捷按钮

0.0.3   设定两个基本的角色admin和user，分别是管理员和普通用户。
        修正了文件操作历史记录中的日期批量更新问题，应该是模型中自动插入日期的功能有误，这里
        统一在程序中插入时间戳。
        新增了一项Ant任务可以备份完整的项目包，无需再下载依赖包。

0.0.2   重构后出现了Angular的问题，最后从FatonMean开始重构，现已顺利完成，清理了npm的包结构，
        规范了bower包结构，app的结构暂时没有动，需要等数据库admin登录成功后再做处理。
        App的结构也重构完成。

0.0.1   在FatonMean1.1.4的基础上创建的“易盘”项目，主要是围绕这网盘功能增加用户登录、容量控制
        等功能，目的是测试Mean项目的并发性，也作为软件测试的一个目标程序：
        a.  支持基本的网盘功能如上传、下载、增删改查、CVX、选择等；
        b.  登录用户除了管理员以外都有一个权限目录和容量，用户仅在权限目录内可以进行改名、删除和
            上传操作，在所有目录内都可以浏览目录文件结构、下载文件或者“在线查看”文件；容量限制
            是上传文件的大小总和，用户删除文件和上传文件时自动维护一个总容量数据，一旦总容量将超
            过容量限制，则不允许上传新文件。

        完成FatonMean项目复制到Yipan项目的重构，数据库初始化中遇到了权限问题，'readWrite'权限才能
        保证能执行基本的show和增删改操作，
